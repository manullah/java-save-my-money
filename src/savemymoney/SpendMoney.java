/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package savemymoney;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

/**
 *
 * @author pengg
 */
public class SpendMoney extends javax.swing.JFrame {

    Connection con = null;
    PreparedStatement pstSelectSpendCategory = null;
    PreparedStatement pstInsertSpendCategory = null;
    PreparedStatement pstInsertFinancialHistory = null;
    PreparedStatement pstUpdateUser = null;
    ResultSet resultSpendCategory = null;
    String category;
    
    private GlobalObject globalObject;
    
    /**
     * Creates new form SpendMoney
     */
    public SpendMoney() {
        initComponents();
        
        GlobalObject globalObject = new GlobalObject();
        this.globalObject = globalObject;
        
        con = DbConnection.ConnectionDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupCategory = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtNominal = new javax.swing.JTextField();
        rdbFoodAndDrink = new javax.swing.JRadioButton();
        rdbInstallment = new javax.swing.JRadioButton();
        rdbGame = new javax.swing.JRadioButton();
        rdbOther = new javax.swing.JRadioButton();
        txtOther = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nominal");

        txtNominal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNominalActionPerformed(evt);
            }
        });

        btnGroupCategory.add(rdbFoodAndDrink);
        rdbFoodAndDrink.setText("Food & Drink");
        rdbFoodAndDrink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFoodAndDrinkActionPerformed(evt);
            }
        });

        btnGroupCategory.add(rdbInstallment);
        rdbInstallment.setText("Installment");
        rdbInstallment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbInstallmentActionPerformed(evt);
            }
        });

        btnGroupCategory.add(rdbGame);
        rdbGame.setText("Game");
        rdbGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbGameActionPerformed(evt);
            }
        });

        btnGroupCategory.add(rdbOther);
        rdbOther.setText("Other");
        rdbOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbOtherActionPerformed(evt);
            }
        });

        txtOther.setEditable(false);
        txtOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOtherActionPerformed(evt);
            }
        });

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdbInstallment)
                            .addComponent(rdbGame)
                            .addComponent(rdbFoodAndDrink)
                            .addComponent(rdbOther)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtNominal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtOther, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(jButton1)))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNominal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbFoodAndDrink)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbInstallment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbGame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbOther)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOther, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNominalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNominalActionPerformed

    }//GEN-LAST:event_txtNominalActionPerformed

    private void rdbFoodAndDrinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFoodAndDrinkActionPerformed
        if (rdbFoodAndDrink.isSelected()) {
            category = rdbFoodAndDrink.getText();
            txtOther.setEditable(false);
        }
    }//GEN-LAST:event_rdbFoodAndDrinkActionPerformed

    private void rdbInstallmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbInstallmentActionPerformed
        if (rdbInstallment.isSelected()) {
            category = rdbInstallment.getText();
            txtOther.setEditable(false);
        }
    }//GEN-LAST:event_rdbInstallmentActionPerformed

    private void rdbGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbGameActionPerformed
        if (rdbGame.isSelected()) {
            category = rdbGame.getText();
            txtOther.setEditable(false);
        }
    }//GEN-LAST:event_rdbGameActionPerformed

    private void rdbOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbOtherActionPerformed
        if (rdbOther.isSelected()) {
            txtOther.setEditable(true);
        }
    }//GEN-LAST:event_rdbOtherActionPerformed

    private void txtOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOtherActionPerformed

    }//GEN-LAST:event_txtOtherActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (txtNominal.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "You must fill the nominal first!");
            return;
        }

        if (btnGroupCategory.getSelection() == null) {
            JOptionPane.showMessageDialog(null, "You must to choose one!");
            return;
        }

        if (rdbOther.isSelected()) {
            if (txtOther.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "You must fill the other field!");
                return;
            }

            try {
                category = txtOther.getText();
                String querySelectSpendCategory = "SELECT * from spend_categories WHERE name LIKE ?;";
                pstSelectSpendCategory = con.prepareStatement(querySelectSpendCategory);
                pstSelectSpendCategory.setString(1, category);
                resultSpendCategory = pstSelectSpendCategory.executeQuery();

                if (!resultSpendCategory.next()) {
                    String queryInsertSpendCategory = "INSERT INTO spend_categories VALUES (?);";
                    pstInsertSpendCategory = con.prepareStatement(queryInsertSpendCategory);
                    pstInsertSpendCategory.setString(1, category);
                    pstInsertSpendCategory.execute();
                    System.out.println("New spend category is created!");
                }
            } catch (Exception e) {
                System.out.println("Add new spend category Failed " + e);
                JOptionPane.showMessageDialog(null, "Something whent wrong");
                return;
            } finally {
                if (resultSpendCategory != null){
                    try{
                        resultSpendCategory.close();
                    } catch(Exception e){
                        e.printStackTrace();
                    }
                }
                if (pstSelectSpendCategory != null){
                    try{
                        pstSelectSpendCategory.close();
                    } catch(Exception e){
                        e.printStackTrace();
                    }
                }
            }
        }

        try {
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd hh:mm:ss");

            String queryInsertFinancialHistory = "INSERT INTO financial_histories VALUES (?, ?, ?, ?, ?);";
            pstInsertFinancialHistory = con.prepareStatement(queryInsertFinancialHistory);
            pstInsertFinancialHistory.setString(1, "Spend");
            pstInsertFinancialHistory.setString(2, category);
            pstInsertFinancialHistory.setString(3, txtNominal.getText());
            pstInsertFinancialHistory.setString(4, dtf.format(LocalDateTime.now()));
            pstInsertFinancialHistory.setInt(5, globalObject.userId);
            pstInsertFinancialHistory.execute();

            int balance = globalObject.balance - Integer.parseInt(txtNominal.getText());
            String queryUpdateUser = "UPDATE users SET balance = (?) WHERE id = " + globalObject.userId;
            pstUpdateUser = con.prepareStatement(queryUpdateUser);
            pstUpdateUser.setInt(1, balance);
            pstUpdateUser.execute();
            
            globalObject.balance = balance;

            new Home().setVisible(true);
            this.dispose();
        } catch (Exception e) {
            System.out.println("Add new financial history Failed " + e);
            JOptionPane.showMessageDialog(null, "Something whent wrong");
        } finally {
            if (pstInsertFinancialHistory != null){
                try{
                    pstInsertFinancialHistory.close();
                } catch(Exception e){
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpendMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpendMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpendMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpendMoney.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpendMoney().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroupCategory;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton rdbFoodAndDrink;
    private javax.swing.JRadioButton rdbGame;
    private javax.swing.JRadioButton rdbInstallment;
    private javax.swing.JRadioButton rdbOther;
    private javax.swing.JTextField txtNominal;
    private javax.swing.JTextField txtOther;
    // End of variables declaration//GEN-END:variables
}
